composer create-project symfony/framework-standard-edition rest 2.2.0
cd rest
composer require jms/serializer-bundle @stable
composer require friendofsymfony/rest-bundle @stable
app/console --version
app/console generate:bundle
Bundle namespace: Screenfony/DemoBundle
annotation
...
###
Register bundle app/AppKernel.php
###
...
new JMS/SerializerBundle\JMSSerializerBundle(),
new FOS\RestBundle\FOSRestBundle()
...


###
Create simple entity
###
app/console doctrine:generate:entity
The Entity shortcut name: ScreenfonyDemoBundle:User
annotation
New field name (...): username
New field name (...): password
New field name (...): email
Confirm generation: yes

###
Config.yml
###
...
sensio_framework_extra:
  view:   { annotation: false }
  router: { annotation: true } 

fos_rest:
  format_listner:
    prefer_extension: false
  view
    view_response_listener: true

###
Routing.yml
###
screenfony_demo:
  resource: "@ScreenfonyDemoBundle/Controller/"
  type:  annotation
  prefix: /

users: 
  type: rest
  resorce: Screenfony\DemoBundle\Controller\UsersController

###
Controller
###
UserController.php

namespace Screenfony\DemoBundle\Controller;
use Symfony\bundle\FrameworkBundle\Controller\Controller;
use FOS\RestBundle\Controller\Annotations\View;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter; //don't need to load manualy USer Entity

class USersController extends Controller {

	/**
	* @return array
	* @View()
	*/
	public function getUsersAction() {
	
		$users = $this->getDoctrine()->getRepository('ScreenfonyDemoBundle:User')->findAll();
		return array('users' => $users);
	
	}
	
	/**
	* @param User $user
	* @return array
	* @View()
	* @ParamConverter("user", class="ScreenfonyDemoBundle:User")
	*/
	public function getUserAction (User $user) {
	
		return array('user' => $users);
	
	}
	
}

###
Router
###
app/console router:debug
// get_users 	GET 	ANY /users.{_format}
// get_user 	GET		ANY /users/{user}.{_format}


###
composer require doctrine/doctrine-fixtures-bundle dev-master
###
AppKernel.php
...
new Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle(),
...

###
mkdir DataFixtures\ORM\
touch LoadUSerData.php
###

namespace Screenfony\DemoBundle\DataFistures\ORM;

use Doctrine\Common\DataFistures\Doctrine;
use Doctrine\Common\DataFistures\FixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Screenfony\DemoBundle\Entity\User;

class LaodUserDaa implements FixtureInterface {

/**
* Load data fixtures with password EntityManeger
*/
public function load (ObjectManager $manager) {

	$alice = new User();
	$alice->setUserName('alice');
	$alice->setEmail('alice@screenfony.com);
	$alice->setPassword('passwordofalice');
	
	$bob = new User();
	$bob->setUserName('bob');
	$bob->setEmail('bob@screenfony.com);
	$bob->setPassword('passwordofbob');
	
	$manager->persist($alice);
	$manager->persist($bob);

	$manager->flush();

}

}

### parameters.yml ###
database_name: screnfony_rest

###
app/console doctrine:database:create
app/console doctrine:schema:create
app/console doctrine:fixtures:load
###

###
http --version  //github.com/jkbr/httpie

http http://screenfony.rest.lo/app_dev.php/users Accept:application/json
// json response

http http://screenfony.rest.lo/app_dev.php/users Accept:application/xml
// xml response

// serializer sending passowrds in clear. Bad

### config the serializer to hide passowrds  ###
mkdir /src/Screenfony/DemoBundle/Resorces/config/serializer/
touch Entity.Users.yml
###

Screenfony\DemoBundle\Entity\Users:
	exclusion_policy: ALL
 	  propertirs: 
	   id:
	     expose: true
	   username:
	     expose: true
	   email:
	     expose: true

### 
app/console cache:clear --env=dev
###
http http://screenfony.rest.lo/app_dev.php/users Accept:application/json
//no password exposed anymore

### use Xdebug ###
php -i | grep xdebug.remote
// echo xdebug info here

### add breakpoint in IDE for Xdebug
http http://screenfony.rest.lo/app_dev.php/users Accept:application/json Cookie:XDEBUG_SESSION=1
